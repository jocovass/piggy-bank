name: 🚀 Deploy
on:
  push:
    branches:
      - master
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⬡ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck

  test-database:
    name: 🛠 Create New Test Branch
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🏷 Get Branch Name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: 🚧 Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v4
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          parent: ${{ secrets.NEON_MAIN_ID }}
          branch_name:
            pr-${{ github.event.number }}-${{
            steps.branch-name.outputs.current_branch }}
          username: ${{ secrets.NEON_DATABASE_USERNAME }}
          api_key: ${{ secrets.NEON_API_KEY }}
      - run: echo project_id ${{ steps.create-branch.outputs.project_id }}
      - run: echo branch_id ${{ steps.create-branch.outputs.branch_id }}

      - name: 🔑 Set DB URL as env variable
        run:
          echo "DB_URL=${{ steps.create-branch.outputs.db_url
          }}?sslmode=require" >> $GITHUB_ENV

      - name: 🧬 Generate Migrations
        run: npm run db:generate

      - name: 🧳 Run Migrations
        run: npm run db:migrate

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

  playwright:
    name: 🎭 Playwright
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⬡ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 📥 Install Playwright Browsers
        run: npm run test:e2e:install

      # add migration setps/seed later

      - name: 🏗 Build
        run: npm run build

      - name: 🎭 Playwright test
        run: npx playwright test

      - name: 📊 Upload report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # deploy:
  #   name: 🚀 Deploy
  #   runs-on: ubuntu-22.04
  #   # Only build/deploy branches on push
  #   if: ${{ github.event_name == 'push' }}

  # steps:
  #   - name: ⬇️ Checkout repo
  #     uses: actions/checkout@v4

  #   - name: 🎈 Setup Fly
  #     uses: superfly/flyctl-actions/setup-flyctl@1.5

  #   - name: 🚀 Deploy Production
  #     run: flyctl deploy --remote-only
  #     env:
  #       FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
